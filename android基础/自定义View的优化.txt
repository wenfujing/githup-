自定义的优化方案
1、对于频繁调用的方法，需要减少不必要的代码。先从onDraw开始，需要特别注意不应该在这里做内存分配的事情，因为它会导致GC，从而导致卡顿。正确的应该在初始化或者动画间隙期间做分配内存的动作。不要在动画执行的时候做内存分配的事情。
2、尽可能的减少onDraw的调用次数，因为里面的invalidate()方法会导致卡顿，如果可能的话，尽可能的调用4个参数的方法，避免直接调用没有参数的invalidate(),没有参数的话，会强制重新绘制整个view.
3、另外一个非常耗时间的操作就是请求layout，任何时候执行requestLayout()会使得android UI系统去遍历整个View的层级。另外一个就是尽可能的保持View的层级是扁平化的。如果有一个复杂的UI，可以考虑自定义一个ViewGroup来执行它的layout操作。